import os
import sys

import psycopg2 as dbapi2


INIT_STATEMENTS = [
    """CREATE TABLE FACULTIES (
    FAC_ID SERIAL PRIMARY KEY,
    FAC_NAME VARCHAR(100) NOT NULL,
    FAC_BUILDING INTEGER,
    FOREIGN KEY FAC_BUILDING REFERENCES BUILDINGS(BU_ID)
)""",

    """CREATE TABLE ASSISTANTS (
    AS_ID SERIAL PRIMARY KEY,
    AS_PERSON INTEGER NOT NULL,
    LAB INTEGER,
    DEGREE VARCHAR(10),
    FOREIGN KEY AS_PERSON REFERENCES PEOPLE(P_ID),
    FOREIGN KEY LAB REFERENCES LABS(LAB_ID)
)""",

    """CREATE TABLE LABS (
    LAB_ID SERIAL PRIMARY KEY,
    LAB_NAME VARCHAR(100) UNIQUE,
    DEPARTMENT INTEGER,
    FACULTY INTEGER,
    BUILDING  INTEGER,
    ROOM INTEGER,
    FOREIGN KEY BUILDING REFERENCES BUILDINGS(BU_ID),
    FOREIGN KEY PERSON REFERENCES PEOPLE(P_ID),
    FOREIGN KEY FACULTY REFERENCES FACULTIES(FAC_ID),
    FOREIGN KEY DEPARTMENT REFERENCES DEPARTMENTS(DEP_ID),
    FOREIGN KEY ROOM REFERENCES ROOMS(ROOM_ID)
)""",

    """CREATE TABLE DEPARTMENTS (
    DEP_ID SERIAL PRIMARY KEY,
    DEP_NAME VARCHAR(100),
    FACULTY INTEGER,
    BUILDING INTEGER,
    DEAN INTEGER,
    FOREIGN KEY BUILDING REFERENCES BUILDINGS(BUILD_ID),
    FOREIGN KEY FACULTY REFERENCES FACULTIES(FAC_ID),
    FOREIGN KEY DEAN REFERENCES PEOPLE(P_ID)
)""",

    """CREATE TABLE PAPERS (
    PAPER_ID SERIAL PRIMARY KEY,
    CONFERENCE VARCHAR(100),
    CITATION_COUNT INTEGER DEFAULT 0,
    AUTHOR INTEGER,
    FOREIGN KEY AUTHOR REFERENCES PEOPLE(P_ID),
)""",

    """CREATE TABLE CLUBS (
    CLUB_ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    FACULTY INTEGER,
    ADVISOR INTEGER,
    CHAIRMAN INTEGER,
    V_CHAIRMAN_1 INTEGER,
    V_CHAIRMAN_2 INTEGER,
    FOREIGN KEY FACULTY REFERENCES FACULTIES(FAC_ID),
    FOREIGN KEY ADVISOR REFERENCES PEOPLE(P_ID),
    FOREIGN KEY CHAIRMAN REFERENCES PEOPLE(P_ID),
    FOREIGN KEY V_CHAIRMAN_1 REFERENCES PEOPLE(P_ID),
    FOREIGN KEY V_CHAIRMAN_2 REFERENCES PEOPLE(P_ID)
)""",

    """CREATE TABLE BUILDINGS (
    BU_ID SERIAL PRIMARY_KEY,
    BU_NAME VARCHAR(100),
    BU_CODE VARCHAR(5)
)"""
]


def initialize(url):
    with dbapi2.connect(url) as connection:
        cursor = connection.cursor()
        for statement in INIT_STATEMENTS:
            cursor.execute(statement)
        cursor.close()


if __name__ == "__main__":
    url = os.getenv("DATABASE_URL")
    if url is None:
        print("Usage: DATABASE_URL=url python dbinit.py", file=sys.stderr)
        sys.exit(1)
    initialize(url)
